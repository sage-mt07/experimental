services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.10
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.10
    depends_on:
      - zookeeper
    ports:
      - "39092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # External-first advertised listener to make host AdminClient reachable; internal uses client.listener.name
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:29092,PLAINTEXT://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:39092,PLAINTEXT://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:29093", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.10
    depends_on:
      - kafka
    ports:
      - "18081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29093'
      SCHEMA_REGISTRY_KAFKASTORE_CLIENT_LISTENER_NAME: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.4.10
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "18088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: "kafka:29093"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_KSQL_SERVICE_ID: "ksql_service_manualcommit"
      KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: "earliest"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_KSQL_STREAMS_CLIENT_LISTENER_NAME: PLAINTEXT

  runner:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_started
      ksqldb-server:
        condition: service_started
    working_dir: /src
    volumes:
      - ../../..:/src
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQLDB_URL: http://ksqldb-server:8088
    entrypoint: ["/bin/sh", "-lc", "set -e; echo waiting for services...; for i in $(seq 1 60); do if curl -fsS http://schema-registry:8081/subjects >/dev/null 2>&1 && curl -fsS http://ksqldb-server:8088/info >/dev/null 2>&1; then break; fi; sleep 2; done; dotnet --info >/dev/null; dotnet run -c Release --project physicalTests/Runners/ManualCommitRunner/ManualCommitRunner.csproj" ]
